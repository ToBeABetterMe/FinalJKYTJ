package com.c102c.app.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.c102c.app.model.NeonatalVisit_upload;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "NEONATAL_VISIT_UPLOAD".
*/
public class NeonatalVisit_uploadDao extends AbstractDao<NeonatalVisit_upload, Long> {

    public static final String TABLENAME = "NEONATAL_VISIT_UPLOAD";

    /**
     * Properties of entity NeonatalVisit_upload.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property PersonId = new Property(1, String.class, "personId", false, "PERSON_ID");
        public final static Property SpecialNo = new Property(2, String.class, "specialNo", false, "SPECIAL_NO");
        public final static Property MachineCode = new Property(3, String.class, "machineCode", false, "MACHINE_CODE");
        public final static Property MachineNo = new Property(4, String.class, "machineNo", false, "MACHINE_NO");
        public final static Property Name = new Property(5, String.class, "name", false, "NAME");
        public final static Property GenderCode = new Property(6, String.class, "genderCode", false, "GENDER_CODE");
        public final static Property Birthday = new Property(7, String.class, "birthday", false, "BIRTHDAY");
        public final static Property IdCard = new Property(8, String.class, "idCard", false, "ID_CARD");
        public final static Property HomeAddress = new Property(9, String.class, "homeAddress", false, "HOME_ADDRESS");
        public final static Property FatherName = new Property(10, String.class, "fatherName", false, "FATHER_NAME");
        public final static Property MatherName = new Property(11, String.class, "matherName", false, "MATHER_NAME");
        public final static Property FatherOccupation = new Property(12, String.class, "fatherOccupation", false, "FATHER_OCCUPATION");
        public final static Property MatherOccupation = new Property(13, String.class, "matherOccupation", false, "MATHER_OCCUPATION");
        public final static Property FatherContac = new Property(14, String.class, "fatherContac", false, "FATHER_CONTAC");
        public final static Property MatherContac = new Property(15, String.class, "matherContac", false, "MATHER_CONTAC");
        public final static Property FatherBirthday = new Property(16, String.class, "fatherBirthday", false, "FATHER_BIRTHDAY");
        public final static Property MatherBirthday = new Property(17, String.class, "matherBirthday", false, "MATHER_BIRTHDAY");
        public final static Property WeekOfBirth = new Property(18, String.class, "weekOfBirth", false, "WEEK_OF_BIRTH");
        public final static Property PregnancyBeIllCode = new Property(19, String.class, "pregnancyBeIllCode", false, "PREGNANCY_BE_ILL_CODE");
        public final static Property PregnancyBeIllOther = new Property(20, String.class, "pregnancyBeIllOther", false, "PREGNANCY_BE_ILL_OTHER");
        public final static Property MidwiferyOrgName = new Property(21, String.class, "midwiferyOrgName", false, "MIDWIFERY_ORG_NAME");
        public final static Property BirthConditionCodes = new Property(22, String.class, "birthConditionCodes", false, "BIRTH_CONDITION_CODES");
        public final static Property NeonatalAsphyxiaCode = new Property(23, String.class, "neonatalAsphyxiaCode", false, "NEONATAL_ASPHYXIA_CODE");
        public final static Property Apgar1 = new Property(24, String.class, "apgar1", false, "APGAR1");
        public final static Property Apgar5 = new Property(25, String.class, "apgar5", false, "APGAR5");
        public final static Property Apgar10 = new Property(26, String.class, "apgar10", false, "APGAR10");
        public final static Property DeformityCode = new Property(27, String.class, "deformityCode", false, "DEFORMITY_CODE");
        public final static Property DeformityOther = new Property(28, String.class, "deformityOther", false, "DEFORMITY_OTHER");
        public final static Property UNHSCode = new Property(29, String.class, "UNHSCode", false, "UNHSCODE");
        public final static Property NeonatalScreeningCode = new Property(30, String.class, "neonatalScreeningCode", false, "NEONATAL_SCREENING_CODE");
        public final static Property NeonatalScreeningOther = new Property(31, String.class, "neonatalScreeningOther", false, "NEONATAL_SCREENING_OTHER");
        public final static Property BirthWeight = new Property(32, String.class, "birthWeight", false, "BIRTH_WEIGHT");
        public final static Property CurrentWeight = new Property(33, String.class, "currentWeight", false, "CURRENT_WEIGHT");
        public final static Property BirthHeight = new Property(34, String.class, "birthHeight", false, "BIRTH_HEIGHT");
        public final static Property FeedingPatternCode = new Property(35, String.class, "feedingPatternCode", false, "FEEDING_PATTERN_CODE");
        public final static Property FeedingAmount = new Property(36, String.class, "feedingAmount", false, "FEEDING_AMOUNT");
        public final static Property FeedingTimes = new Property(37, String.class, "feedingTimes", false, "FEEDING_TIMES");
        public final static Property VomitCode = new Property(38, String.class, "vomitCode", false, "VOMIT_CODE");
        public final static Property FecalCode = new Property(39, String.class, "fecalCode", false, "FECAL_CODE");
        public final static Property FecalTimes = new Property(40, String.class, "fecalTimes", false, "FECAL_TIMES");
        public final static Property Temperature = new Property(41, String.class, "temperature", false, "TEMPERATURE");
        public final static Property PulseRate = new Property(42, String.class, "pulseRate", false, "PULSE_RATE");
        public final static Property RespiratoryRate = new Property(43, String.class, "respiratoryRate", false, "RESPIRATORY_RATE");
        public final static Property ComplexionCode = new Property(44, String.class, "complexionCode", false, "COMPLEXION_CODE");
        public final static Property ComplexionOther = new Property(45, String.class, "complexionOther", false, "COMPLEXION_OTHER");
        public final static Property JaundiceSiteCode = new Property(46, String.class, "jaundiceSiteCode", false, "JAUNDICE_SITE_CODE");
        public final static Property Bregma1 = new Property(47, String.class, "bregma1", false, "BREGMA1");
        public final static Property Bregma2 = new Property(48, String.class, "bregma2", false, "BREGMA2");
        public final static Property BregmaCode = new Property(49, String.class, "bregmaCode", false, "BREGMA_CODE");
        public final static Property BregmaOther = new Property(50, String.class, "bregmaOther", false, "BREGMA_OTHER");
        public final static Property EyeAppearanceCode = new Property(51, String.class, "eyeAppearanceCode", false, "EYE_APPEARANCE_CODE");
        public final static Property EyeAppearanceDesc = new Property(52, String.class, "eyeAppearanceDesc", false, "EYE_APPEARANCE_DESC");
        public final static Property LimbsActivityCode = new Property(53, String.class, "limbsActivityCode", false, "LIMBS_ACTIVITY_CODE");
        public final static Property LimbsActivityDesc = new Property(54, String.class, "limbsActivityDesc", false, "LIMBS_ACTIVITY_DESC");
        public final static Property EarAppearanceCode = new Property(55, String.class, "earAppearanceCode", false, "EAR_APPEARANCE_CODE");
        public final static Property EarAppearanceDesc = new Property(56, String.class, "earAppearanceDesc", false, "EAR_APPEARANCE_DESC");
        public final static Property NeckMassCode = new Property(57, String.class, "neckMassCode", false, "NECK_MASS_CODE");
        public final static Property NeckMassDesc = new Property(58, String.class, "neckMassDesc", false, "NECK_MASS_DESC");
        public final static Property NoseCode = new Property(59, String.class, "noseCode", false, "NOSE_CODE");
        public final static Property NoseDesc = new Property(60, String.class, "noseDesc", false, "NOSE_DESC");
        public final static Property SkinCode = new Property(61, String.class, "skinCode", false, "SKIN_CODE");
        public final static Property SkinOther = new Property(62, String.class, "skinOther", false, "SKIN_OTHER");
        public final static Property OralCode = new Property(63, String.class, "oralCode", false, "ORAL_CODE");
        public final static Property OralDesc = new Property(64, String.class, "oralDesc", false, "ORAL_DESC");
        public final static Property AnusCode = new Property(65, String.class, "anusCode", false, "ANUS_CODE");
        public final static Property AnusDesc = new Property(66, String.class, "anusDesc", false, "ANUS_DESC");
        public final static Property HeartLungAuscultationCode = new Property(67, String.class, "heartLungAuscultationCode", false, "HEART_LUNG_AUSCULTATION_CODE");
        public final static Property HeartLungAuscultationDesc = new Property(68, String.class, "heartLungAuscultationDesc", false, "HEART_LUNG_AUSCULTATION_DESC");
        public final static Property ExternalGenitalCode = new Property(69, String.class, "externalGenitalCode", false, "EXTERNAL_GENITAL_CODE");
        public final static Property ExternalGenitalDesc = new Property(70, String.class, "externalGenitalDesc", false, "EXTERNAL_GENITAL_DESC");
        public final static Property AbdominalPalpationCode = new Property(71, String.class, "abdominalPalpationCode", false, "ABDOMINAL_PALPATION_CODE");
        public final static Property AbdominalPalpationDesc = new Property(72, String.class, "abdominalPalpationDesc", false, "ABDOMINAL_PALPATION_DESC");
        public final static Property SpineCode = new Property(73, String.class, "spineCode", false, "SPINE_CODE");
        public final static Property SpineDesc = new Property(74, String.class, "spineDesc", false, "SPINE_DESC");
        public final static Property UmbilicalCordCode = new Property(75, String.class, "umbilicalCordCode", false, "UMBILICAL_CORD_CODE");
        public final static Property UmbilicalCordOther = new Property(76, String.class, "umbilicalCordOther", false, "UMBILICAL_CORD_OTHER");
        public final static Property ReferralCode = new Property(77, String.class, "referralCode", false, "REFERRAL_CODE");
        public final static Property ReferralReason = new Property(78, String.class, "referralReason", false, "REFERRAL_REASON");
        public final static Property ReferralOrg = new Property(79, String.class, "referralOrg", false, "REFERRAL_ORG");
        public final static Property ReferralDepartment = new Property(80, String.class, "referralDepartment", false, "REFERRAL_DEPARTMENT");
        public final static Property GuideCodes = new Property(81, String.class, "guideCodes", false, "GUIDE_CODES");
        public final static Property FlupDate = new Property(82, String.class, "flupDate", false, "FLUP_DATE");
        public final static Property FlupDoctorCode = new Property(83, String.class, "flupDoctorCode", false, "FLUP_DOCTOR_CODE");
        public final static Property FlupDoctorName = new Property(84, String.class, "flupDoctorName", false, "FLUP_DOCTOR_NAME");
        public final static Property FlupOrgCode = new Property(85, String.class, "flupOrgCode", false, "FLUP_ORG_CODE");
        public final static Property FlupOrgName = new Property(86, String.class, "flupOrgName", false, "FLUP_ORG_NAME");
        public final static Property NextFlupDate = new Property(87, String.class, "nextFlupDate", false, "NEXT_FLUP_DATE");
        public final static Property NextFlupLocation = new Property(88, String.class, "nextFlupLocation", false, "NEXT_FLUP_LOCATION");
    };


    public NeonatalVisit_uploadDao(DaoConfig config) {
        super(config);
    }
    
    public NeonatalVisit_uploadDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"NEONATAL_VISIT_UPLOAD\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"PERSON_ID\" TEXT," + // 1: personId
                "\"SPECIAL_NO\" TEXT," + // 2: specialNo
                "\"MACHINE_CODE\" TEXT," + // 3: machineCode
                "\"MACHINE_NO\" TEXT," + // 4: machineNo
                "\"NAME\" TEXT," + // 5: name
                "\"GENDER_CODE\" TEXT," + // 6: genderCode
                "\"BIRTHDAY\" TEXT," + // 7: birthday
                "\"ID_CARD\" TEXT," + // 8: idCard
                "\"HOME_ADDRESS\" TEXT," + // 9: homeAddress
                "\"FATHER_NAME\" TEXT," + // 10: fatherName
                "\"MATHER_NAME\" TEXT," + // 11: matherName
                "\"FATHER_OCCUPATION\" TEXT," + // 12: fatherOccupation
                "\"MATHER_OCCUPATION\" TEXT," + // 13: matherOccupation
                "\"FATHER_CONTAC\" TEXT," + // 14: fatherContac
                "\"MATHER_CONTAC\" TEXT," + // 15: matherContac
                "\"FATHER_BIRTHDAY\" TEXT," + // 16: fatherBirthday
                "\"MATHER_BIRTHDAY\" TEXT," + // 17: matherBirthday
                "\"WEEK_OF_BIRTH\" TEXT," + // 18: weekOfBirth
                "\"PREGNANCY_BE_ILL_CODE\" TEXT," + // 19: pregnancyBeIllCode
                "\"PREGNANCY_BE_ILL_OTHER\" TEXT," + // 20: pregnancyBeIllOther
                "\"MIDWIFERY_ORG_NAME\" TEXT," + // 21: midwiferyOrgName
                "\"BIRTH_CONDITION_CODES\" TEXT," + // 22: birthConditionCodes
                "\"NEONATAL_ASPHYXIA_CODE\" TEXT," + // 23: neonatalAsphyxiaCode
                "\"APGAR1\" TEXT," + // 24: apgar1
                "\"APGAR5\" TEXT," + // 25: apgar5
                "\"APGAR10\" TEXT," + // 26: apgar10
                "\"DEFORMITY_CODE\" TEXT," + // 27: deformityCode
                "\"DEFORMITY_OTHER\" TEXT," + // 28: deformityOther
                "\"UNHSCODE\" TEXT," + // 29: UNHSCode
                "\"NEONATAL_SCREENING_CODE\" TEXT," + // 30: neonatalScreeningCode
                "\"NEONATAL_SCREENING_OTHER\" TEXT," + // 31: neonatalScreeningOther
                "\"BIRTH_WEIGHT\" TEXT," + // 32: birthWeight
                "\"CURRENT_WEIGHT\" TEXT," + // 33: currentWeight
                "\"BIRTH_HEIGHT\" TEXT," + // 34: birthHeight
                "\"FEEDING_PATTERN_CODE\" TEXT," + // 35: feedingPatternCode
                "\"FEEDING_AMOUNT\" TEXT," + // 36: feedingAmount
                "\"FEEDING_TIMES\" TEXT," + // 37: feedingTimes
                "\"VOMIT_CODE\" TEXT," + // 38: vomitCode
                "\"FECAL_CODE\" TEXT," + // 39: fecalCode
                "\"FECAL_TIMES\" TEXT," + // 40: fecalTimes
                "\"TEMPERATURE\" TEXT," + // 41: temperature
                "\"PULSE_RATE\" TEXT," + // 42: pulseRate
                "\"RESPIRATORY_RATE\" TEXT," + // 43: respiratoryRate
                "\"COMPLEXION_CODE\" TEXT," + // 44: complexionCode
                "\"COMPLEXION_OTHER\" TEXT," + // 45: complexionOther
                "\"JAUNDICE_SITE_CODE\" TEXT," + // 46: jaundiceSiteCode
                "\"BREGMA1\" TEXT," + // 47: bregma1
                "\"BREGMA2\" TEXT," + // 48: bregma2
                "\"BREGMA_CODE\" TEXT," + // 49: bregmaCode
                "\"BREGMA_OTHER\" TEXT," + // 50: bregmaOther
                "\"EYE_APPEARANCE_CODE\" TEXT," + // 51: eyeAppearanceCode
                "\"EYE_APPEARANCE_DESC\" TEXT," + // 52: eyeAppearanceDesc
                "\"LIMBS_ACTIVITY_CODE\" TEXT," + // 53: limbsActivityCode
                "\"LIMBS_ACTIVITY_DESC\" TEXT," + // 54: limbsActivityDesc
                "\"EAR_APPEARANCE_CODE\" TEXT," + // 55: earAppearanceCode
                "\"EAR_APPEARANCE_DESC\" TEXT," + // 56: earAppearanceDesc
                "\"NECK_MASS_CODE\" TEXT," + // 57: neckMassCode
                "\"NECK_MASS_DESC\" TEXT," + // 58: neckMassDesc
                "\"NOSE_CODE\" TEXT," + // 59: noseCode
                "\"NOSE_DESC\" TEXT," + // 60: noseDesc
                "\"SKIN_CODE\" TEXT," + // 61: skinCode
                "\"SKIN_OTHER\" TEXT," + // 62: skinOther
                "\"ORAL_CODE\" TEXT," + // 63: oralCode
                "\"ORAL_DESC\" TEXT," + // 64: oralDesc
                "\"ANUS_CODE\" TEXT," + // 65: anusCode
                "\"ANUS_DESC\" TEXT," + // 66: anusDesc
                "\"HEART_LUNG_AUSCULTATION_CODE\" TEXT," + // 67: heartLungAuscultationCode
                "\"HEART_LUNG_AUSCULTATION_DESC\" TEXT," + // 68: heartLungAuscultationDesc
                "\"EXTERNAL_GENITAL_CODE\" TEXT," + // 69: externalGenitalCode
                "\"EXTERNAL_GENITAL_DESC\" TEXT," + // 70: externalGenitalDesc
                "\"ABDOMINAL_PALPATION_CODE\" TEXT," + // 71: abdominalPalpationCode
                "\"ABDOMINAL_PALPATION_DESC\" TEXT," + // 72: abdominalPalpationDesc
                "\"SPINE_CODE\" TEXT," + // 73: spineCode
                "\"SPINE_DESC\" TEXT," + // 74: spineDesc
                "\"UMBILICAL_CORD_CODE\" TEXT," + // 75: umbilicalCordCode
                "\"UMBILICAL_CORD_OTHER\" TEXT," + // 76: umbilicalCordOther
                "\"REFERRAL_CODE\" TEXT," + // 77: referralCode
                "\"REFERRAL_REASON\" TEXT," + // 78: referralReason
                "\"REFERRAL_ORG\" TEXT," + // 79: referralOrg
                "\"REFERRAL_DEPARTMENT\" TEXT," + // 80: referralDepartment
                "\"GUIDE_CODES\" TEXT," + // 81: guideCodes
                "\"FLUP_DATE\" TEXT," + // 82: flupDate
                "\"FLUP_DOCTOR_CODE\" TEXT," + // 83: flupDoctorCode
                "\"FLUP_DOCTOR_NAME\" TEXT," + // 84: flupDoctorName
                "\"FLUP_ORG_CODE\" TEXT," + // 85: flupOrgCode
                "\"FLUP_ORG_NAME\" TEXT," + // 86: flupOrgName
                "\"NEXT_FLUP_DATE\" TEXT," + // 87: nextFlupDate
                "\"NEXT_FLUP_LOCATION\" TEXT);"); // 88: nextFlupLocation
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"NEONATAL_VISIT_UPLOAD\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, NeonatalVisit_upload entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String personId = entity.getPersonId();
        if (personId != null) {
            stmt.bindString(2, personId);
        }
 
        String specialNo = entity.getSpecialNo();
        if (specialNo != null) {
            stmt.bindString(3, specialNo);
        }
 
        String machineCode = entity.getMachineCode();
        if (machineCode != null) {
            stmt.bindString(4, machineCode);
        }
 
        String machineNo = entity.getMachineNo();
        if (machineNo != null) {
            stmt.bindString(5, machineNo);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(6, name);
        }
 
        String genderCode = entity.getGenderCode();
        if (genderCode != null) {
            stmt.bindString(7, genderCode);
        }
 
        String birthday = entity.getBirthday();
        if (birthday != null) {
            stmt.bindString(8, birthday);
        }
 
        String idCard = entity.getIdCard();
        if (idCard != null) {
            stmt.bindString(9, idCard);
        }
 
        String homeAddress = entity.getHomeAddress();
        if (homeAddress != null) {
            stmt.bindString(10, homeAddress);
        }
 
        String fatherName = entity.getFatherName();
        if (fatherName != null) {
            stmt.bindString(11, fatherName);
        }
 
        String matherName = entity.getMatherName();
        if (matherName != null) {
            stmt.bindString(12, matherName);
        }
 
        String fatherOccupation = entity.getFatherOccupation();
        if (fatherOccupation != null) {
            stmt.bindString(13, fatherOccupation);
        }
 
        String matherOccupation = entity.getMatherOccupation();
        if (matherOccupation != null) {
            stmt.bindString(14, matherOccupation);
        }
 
        String fatherContac = entity.getFatherContac();
        if (fatherContac != null) {
            stmt.bindString(15, fatherContac);
        }
 
        String matherContac = entity.getMatherContac();
        if (matherContac != null) {
            stmt.bindString(16, matherContac);
        }
 
        String fatherBirthday = entity.getFatherBirthday();
        if (fatherBirthday != null) {
            stmt.bindString(17, fatherBirthday);
        }
 
        String matherBirthday = entity.getMatherBirthday();
        if (matherBirthday != null) {
            stmt.bindString(18, matherBirthday);
        }
 
        String weekOfBirth = entity.getWeekOfBirth();
        if (weekOfBirth != null) {
            stmt.bindString(19, weekOfBirth);
        }
 
        String pregnancyBeIllCode = entity.getPregnancyBeIllCode();
        if (pregnancyBeIllCode != null) {
            stmt.bindString(20, pregnancyBeIllCode);
        }
 
        String pregnancyBeIllOther = entity.getPregnancyBeIllOther();
        if (pregnancyBeIllOther != null) {
            stmt.bindString(21, pregnancyBeIllOther);
        }
 
        String midwiferyOrgName = entity.getMidwiferyOrgName();
        if (midwiferyOrgName != null) {
            stmt.bindString(22, midwiferyOrgName);
        }
 
        String birthConditionCodes = entity.getBirthConditionCodes();
        if (birthConditionCodes != null) {
            stmt.bindString(23, birthConditionCodes);
        }
 
        String neonatalAsphyxiaCode = entity.getNeonatalAsphyxiaCode();
        if (neonatalAsphyxiaCode != null) {
            stmt.bindString(24, neonatalAsphyxiaCode);
        }
 
        String apgar1 = entity.getApgar1();
        if (apgar1 != null) {
            stmt.bindString(25, apgar1);
        }
 
        String apgar5 = entity.getApgar5();
        if (apgar5 != null) {
            stmt.bindString(26, apgar5);
        }
 
        String apgar10 = entity.getApgar10();
        if (apgar10 != null) {
            stmt.bindString(27, apgar10);
        }
 
        String deformityCode = entity.getDeformityCode();
        if (deformityCode != null) {
            stmt.bindString(28, deformityCode);
        }
 
        String deformityOther = entity.getDeformityOther();
        if (deformityOther != null) {
            stmt.bindString(29, deformityOther);
        }
 
        String UNHSCode = entity.getUNHSCode();
        if (UNHSCode != null) {
            stmt.bindString(30, UNHSCode);
        }
 
        String neonatalScreeningCode = entity.getNeonatalScreeningCode();
        if (neonatalScreeningCode != null) {
            stmt.bindString(31, neonatalScreeningCode);
        }
 
        String neonatalScreeningOther = entity.getNeonatalScreeningOther();
        if (neonatalScreeningOther != null) {
            stmt.bindString(32, neonatalScreeningOther);
        }
 
        String birthWeight = entity.getBirthWeight();
        if (birthWeight != null) {
            stmt.bindString(33, birthWeight);
        }
 
        String currentWeight = entity.getCurrentWeight();
        if (currentWeight != null) {
            stmt.bindString(34, currentWeight);
        }
 
        String birthHeight = entity.getBirthHeight();
        if (birthHeight != null) {
            stmt.bindString(35, birthHeight);
        }
 
        String feedingPatternCode = entity.getFeedingPatternCode();
        if (feedingPatternCode != null) {
            stmt.bindString(36, feedingPatternCode);
        }
 
        String feedingAmount = entity.getFeedingAmount();
        if (feedingAmount != null) {
            stmt.bindString(37, feedingAmount);
        }
 
        String feedingTimes = entity.getFeedingTimes();
        if (feedingTimes != null) {
            stmt.bindString(38, feedingTimes);
        }
 
        String vomitCode = entity.getVomitCode();
        if (vomitCode != null) {
            stmt.bindString(39, vomitCode);
        }
 
        String fecalCode = entity.getFecalCode();
        if (fecalCode != null) {
            stmt.bindString(40, fecalCode);
        }
 
        String fecalTimes = entity.getFecalTimes();
        if (fecalTimes != null) {
            stmt.bindString(41, fecalTimes);
        }
 
        String temperature = entity.getTemperature();
        if (temperature != null) {
            stmt.bindString(42, temperature);
        }
 
        String pulseRate = entity.getPulseRate();
        if (pulseRate != null) {
            stmt.bindString(43, pulseRate);
        }
 
        String respiratoryRate = entity.getRespiratoryRate();
        if (respiratoryRate != null) {
            stmt.bindString(44, respiratoryRate);
        }
 
        String complexionCode = entity.getComplexionCode();
        if (complexionCode != null) {
            stmt.bindString(45, complexionCode);
        }
 
        String complexionOther = entity.getComplexionOther();
        if (complexionOther != null) {
            stmt.bindString(46, complexionOther);
        }
 
        String jaundiceSiteCode = entity.getJaundiceSiteCode();
        if (jaundiceSiteCode != null) {
            stmt.bindString(47, jaundiceSiteCode);
        }
 
        String bregma1 = entity.getBregma1();
        if (bregma1 != null) {
            stmt.bindString(48, bregma1);
        }
 
        String bregma2 = entity.getBregma2();
        if (bregma2 != null) {
            stmt.bindString(49, bregma2);
        }
 
        String bregmaCode = entity.getBregmaCode();
        if (bregmaCode != null) {
            stmt.bindString(50, bregmaCode);
        }
 
        String bregmaOther = entity.getBregmaOther();
        if (bregmaOther != null) {
            stmt.bindString(51, bregmaOther);
        }
 
        String eyeAppearanceCode = entity.getEyeAppearanceCode();
        if (eyeAppearanceCode != null) {
            stmt.bindString(52, eyeAppearanceCode);
        }
 
        String eyeAppearanceDesc = entity.getEyeAppearanceDesc();
        if (eyeAppearanceDesc != null) {
            stmt.bindString(53, eyeAppearanceDesc);
        }
 
        String limbsActivityCode = entity.getLimbsActivityCode();
        if (limbsActivityCode != null) {
            stmt.bindString(54, limbsActivityCode);
        }
 
        String limbsActivityDesc = entity.getLimbsActivityDesc();
        if (limbsActivityDesc != null) {
            stmt.bindString(55, limbsActivityDesc);
        }
 
        String earAppearanceCode = entity.getEarAppearanceCode();
        if (earAppearanceCode != null) {
            stmt.bindString(56, earAppearanceCode);
        }
 
        String earAppearanceDesc = entity.getEarAppearanceDesc();
        if (earAppearanceDesc != null) {
            stmt.bindString(57, earAppearanceDesc);
        }
 
        String neckMassCode = entity.getNeckMassCode();
        if (neckMassCode != null) {
            stmt.bindString(58, neckMassCode);
        }
 
        String neckMassDesc = entity.getNeckMassDesc();
        if (neckMassDesc != null) {
            stmt.bindString(59, neckMassDesc);
        }
 
        String noseCode = entity.getNoseCode();
        if (noseCode != null) {
            stmt.bindString(60, noseCode);
        }
 
        String noseDesc = entity.getNoseDesc();
        if (noseDesc != null) {
            stmt.bindString(61, noseDesc);
        }
 
        String skinCode = entity.getSkinCode();
        if (skinCode != null) {
            stmt.bindString(62, skinCode);
        }
 
        String skinOther = entity.getSkinOther();
        if (skinOther != null) {
            stmt.bindString(63, skinOther);
        }
 
        String oralCode = entity.getOralCode();
        if (oralCode != null) {
            stmt.bindString(64, oralCode);
        }
 
        String oralDesc = entity.getOralDesc();
        if (oralDesc != null) {
            stmt.bindString(65, oralDesc);
        }
 
        String anusCode = entity.getAnusCode();
        if (anusCode != null) {
            stmt.bindString(66, anusCode);
        }
 
        String anusDesc = entity.getAnusDesc();
        if (anusDesc != null) {
            stmt.bindString(67, anusDesc);
        }
 
        String heartLungAuscultationCode = entity.getHeartLungAuscultationCode();
        if (heartLungAuscultationCode != null) {
            stmt.bindString(68, heartLungAuscultationCode);
        }
 
        String heartLungAuscultationDesc = entity.getHeartLungAuscultationDesc();
        if (heartLungAuscultationDesc != null) {
            stmt.bindString(69, heartLungAuscultationDesc);
        }
 
        String externalGenitalCode = entity.getExternalGenitalCode();
        if (externalGenitalCode != null) {
            stmt.bindString(70, externalGenitalCode);
        }
 
        String externalGenitalDesc = entity.getExternalGenitalDesc();
        if (externalGenitalDesc != null) {
            stmt.bindString(71, externalGenitalDesc);
        }
 
        String abdominalPalpationCode = entity.getAbdominalPalpationCode();
        if (abdominalPalpationCode != null) {
            stmt.bindString(72, abdominalPalpationCode);
        }
 
        String abdominalPalpationDesc = entity.getAbdominalPalpationDesc();
        if (abdominalPalpationDesc != null) {
            stmt.bindString(73, abdominalPalpationDesc);
        }
 
        String spineCode = entity.getSpineCode();
        if (spineCode != null) {
            stmt.bindString(74, spineCode);
        }
 
        String spineDesc = entity.getSpineDesc();
        if (spineDesc != null) {
            stmt.bindString(75, spineDesc);
        }
 
        String umbilicalCordCode = entity.getUmbilicalCordCode();
        if (umbilicalCordCode != null) {
            stmt.bindString(76, umbilicalCordCode);
        }
 
        String umbilicalCordOther = entity.getUmbilicalCordOther();
        if (umbilicalCordOther != null) {
            stmt.bindString(77, umbilicalCordOther);
        }
 
        String referralCode = entity.getReferralCode();
        if (referralCode != null) {
            stmt.bindString(78, referralCode);
        }
 
        String referralReason = entity.getReferralReason();
        if (referralReason != null) {
            stmt.bindString(79, referralReason);
        }
 
        String referralOrg = entity.getReferralOrg();
        if (referralOrg != null) {
            stmt.bindString(80, referralOrg);
        }
 
        String referralDepartment = entity.getReferralDepartment();
        if (referralDepartment != null) {
            stmt.bindString(81, referralDepartment);
        }
 
        String guideCodes = entity.getGuideCodes();
        if (guideCodes != null) {
            stmt.bindString(82, guideCodes);
        }
 
        String flupDate = entity.getFlupDate();
        if (flupDate != null) {
            stmt.bindString(83, flupDate);
        }
 
        String flupDoctorCode = entity.getFlupDoctorCode();
        if (flupDoctorCode != null) {
            stmt.bindString(84, flupDoctorCode);
        }
 
        String flupDoctorName = entity.getFlupDoctorName();
        if (flupDoctorName != null) {
            stmt.bindString(85, flupDoctorName);
        }
 
        String flupOrgCode = entity.getFlupOrgCode();
        if (flupOrgCode != null) {
            stmt.bindString(86, flupOrgCode);
        }
 
        String flupOrgName = entity.getFlupOrgName();
        if (flupOrgName != null) {
            stmt.bindString(87, flupOrgName);
        }
 
        String nextFlupDate = entity.getNextFlupDate();
        if (nextFlupDate != null) {
            stmt.bindString(88, nextFlupDate);
        }
 
        String nextFlupLocation = entity.getNextFlupLocation();
        if (nextFlupLocation != null) {
            stmt.bindString(89, nextFlupLocation);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public NeonatalVisit_upload readEntity(Cursor cursor, int offset) {
        NeonatalVisit_upload entity = new NeonatalVisit_upload( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // specialNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // machineCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // machineNo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // name
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // genderCode
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // birthday
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // idCard
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // homeAddress
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // fatherName
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // matherName
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // fatherOccupation
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // matherOccupation
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // fatherContac
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // matherContac
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // fatherBirthday
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // matherBirthday
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // weekOfBirth
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // pregnancyBeIllCode
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // pregnancyBeIllOther
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // midwiferyOrgName
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // birthConditionCodes
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // neonatalAsphyxiaCode
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // apgar1
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // apgar5
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // apgar10
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // deformityCode
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // deformityOther
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // UNHSCode
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // neonatalScreeningCode
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // neonatalScreeningOther
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // birthWeight
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // currentWeight
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // birthHeight
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // feedingPatternCode
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // feedingAmount
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // feedingTimes
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // vomitCode
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // fecalCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // fecalTimes
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // temperature
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // pulseRate
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // respiratoryRate
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // complexionCode
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // complexionOther
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // jaundiceSiteCode
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // bregma1
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // bregma2
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // bregmaCode
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // bregmaOther
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // eyeAppearanceCode
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // eyeAppearanceDesc
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // limbsActivityCode
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // limbsActivityDesc
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // earAppearanceCode
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // earAppearanceDesc
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // neckMassCode
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // neckMassDesc
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // noseCode
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // noseDesc
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // skinCode
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // skinOther
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // oralCode
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // oralDesc
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // anusCode
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // anusDesc
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // heartLungAuscultationCode
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // heartLungAuscultationDesc
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // externalGenitalCode
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // externalGenitalDesc
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // abdominalPalpationCode
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // abdominalPalpationDesc
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // spineCode
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // spineDesc
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // umbilicalCordCode
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // umbilicalCordOther
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // referralCode
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // referralReason
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // referralOrg
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // referralDepartment
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // guideCodes
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // flupDate
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // flupDoctorCode
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // flupDoctorName
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // flupOrgCode
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // flupOrgName
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // nextFlupDate
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88) // nextFlupLocation
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, NeonatalVisit_upload entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setPersonId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSpecialNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMachineCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setMachineNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setName(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGenderCode(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setBirthday(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setIdCard(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setHomeAddress(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setFatherName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setMatherName(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setFatherOccupation(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setMatherOccupation(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setFatherContac(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setMatherContac(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setFatherBirthday(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setMatherBirthday(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setWeekOfBirth(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setPregnancyBeIllCode(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPregnancyBeIllOther(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setMidwiferyOrgName(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBirthConditionCodes(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setNeonatalAsphyxiaCode(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setApgar1(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setApgar5(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setApgar10(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setDeformityCode(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setDeformityOther(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setUNHSCode(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setNeonatalScreeningCode(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setNeonatalScreeningOther(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setBirthWeight(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setCurrentWeight(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setBirthHeight(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setFeedingPatternCode(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setFeedingAmount(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setFeedingTimes(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setVomitCode(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setFecalCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setFecalTimes(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setTemperature(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setPulseRate(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setRespiratoryRate(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setComplexionCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setComplexionOther(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setJaundiceSiteCode(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setBregma1(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setBregma2(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setBregmaCode(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setBregmaOther(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setEyeAppearanceCode(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setEyeAppearanceDesc(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setLimbsActivityCode(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setLimbsActivityDesc(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setEarAppearanceCode(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setEarAppearanceDesc(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setNeckMassCode(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setNeckMassDesc(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setNoseCode(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setNoseDesc(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setSkinCode(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setSkinOther(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setOralCode(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setOralDesc(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setAnusCode(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setAnusDesc(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setHeartLungAuscultationCode(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setHeartLungAuscultationDesc(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setExternalGenitalCode(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setExternalGenitalDesc(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setAbdominalPalpationCode(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setAbdominalPalpationDesc(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setSpineCode(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setSpineDesc(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setUmbilicalCordCode(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setUmbilicalCordOther(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setReferralCode(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setReferralReason(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setReferralOrg(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setReferralDepartment(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setGuideCodes(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setFlupDate(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setFlupDoctorCode(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setFlupDoctorName(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setFlupOrgCode(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setFlupOrgName(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setNextFlupDate(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setNextFlupLocation(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(NeonatalVisit_upload entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(NeonatalVisit_upload entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
