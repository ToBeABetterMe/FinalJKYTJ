package com.c102c.app.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.c102c.app.model.LocalZhuanZhen;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "LOCAL_ZHUAN_ZHEN".
*/
public class LocalZhuanZhenDao extends AbstractDao<LocalZhuanZhen, Long> {

    public static final String TABLENAME = "LOCAL_ZHUAN_ZHEN";

    /**
     * Properties of entity LocalZhuanZhen.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property PersonId = new Property(2, String.class, "personId", false, "PERSON_ID");
        public final static Property Gender = new Property(3, String.class, "gender", false, "GENDER");
        public final static Property Age = new Property(4, String.class, "age", false, "AGE");
        public final static Property Archive_code = new Property(5, String.class, "archive_code", false, "ARCHIVE_CODE");
        public final static Property Telephone = new Property(6, String.class, "telephone", false, "TELEPHONE");
        public final static Property Address = new Property(7, String.class, "address", false, "ADDRESS");
        public final static Property In_company = new Property(8, String.class, "in_company", false, "IN_COMPANY");
        public final static Property Out_company = new Property(9, String.class, "out_company", false, "OUT_COMPANY");
        public final static Property Date = new Property(10, String.class, "date", false, "DATE");
        public final static Property Jiezhen_keshi = new Property(11, String.class, "jiezhen_keshi", false, "JIEZHEN_KESHI");
        public final static Property In_doctor = new Property(12, String.class, "in_doctor", false, "IN_DOCTOR");
        public final static Property Out_doctor = new Property(13, String.class, "out_doctor", false, "OUT_DOCTOR");
        public final static Property Doctor_telephone = new Property(14, String.class, "doctor_telephone", false, "DOCTOR_TELEPHONE");
        public final static Property First_image = new Property(15, String.class, "first_image", false, "FIRST_IMAGE");
        public final static Property Zhenduan_result = new Property(16, String.class, "zhenduan_result", false, "ZHENDUAN_RESULT");
        public final static Property Jiancha_result = new Property(17, String.class, "jiancha_result", false, "JIANCHA_RESULT");
        public final static Property Zhuyaobingshi = new Property(18, String.class, "zhuyaobingshi", false, "ZHUYAOBINGSHI");
        public final static Property Jiwangbingshi = new Property(19, String.class, "jiwangbingshi", false, "JIWANGBINGSHI");
        public final static Property Zhiliaoguocheng = new Property(20, String.class, "zhiliaoguocheng", false, "ZHILIAOGUOCHENG");
        public final static Property Advice = new Property(21, String.class, "advice", false, "ADVICE");
    };


    public LocalZhuanZhenDao(DaoConfig config) {
        super(config);
    }
    
    public LocalZhuanZhenDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"LOCAL_ZHUAN_ZHEN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"NAME\" TEXT," + // 1: name
                "\"PERSON_ID\" TEXT," + // 2: personId
                "\"GENDER\" TEXT," + // 3: gender
                "\"AGE\" TEXT," + // 4: age
                "\"ARCHIVE_CODE\" TEXT," + // 5: archive_code
                "\"TELEPHONE\" TEXT," + // 6: telephone
                "\"ADDRESS\" TEXT," + // 7: address
                "\"IN_COMPANY\" TEXT," + // 8: in_company
                "\"OUT_COMPANY\" TEXT," + // 9: out_company
                "\"DATE\" TEXT," + // 10: date
                "\"JIEZHEN_KESHI\" TEXT," + // 11: jiezhen_keshi
                "\"IN_DOCTOR\" TEXT," + // 12: in_doctor
                "\"OUT_DOCTOR\" TEXT," + // 13: out_doctor
                "\"DOCTOR_TELEPHONE\" TEXT," + // 14: doctor_telephone
                "\"FIRST_IMAGE\" TEXT," + // 15: first_image
                "\"ZHENDUAN_RESULT\" TEXT," + // 16: zhenduan_result
                "\"JIANCHA_RESULT\" TEXT," + // 17: jiancha_result
                "\"ZHUYAOBINGSHI\" TEXT," + // 18: zhuyaobingshi
                "\"JIWANGBINGSHI\" TEXT," + // 19: jiwangbingshi
                "\"ZHILIAOGUOCHENG\" TEXT," + // 20: zhiliaoguocheng
                "\"ADVICE\" TEXT);"); // 21: advice
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LOCAL_ZHUAN_ZHEN\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LocalZhuanZhen entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String personId = entity.getPersonId();
        if (personId != null) {
            stmt.bindString(3, personId);
        }
 
        String gender = entity.getGender();
        if (gender != null) {
            stmt.bindString(4, gender);
        }
 
        String age = entity.getAge();
        if (age != null) {
            stmt.bindString(5, age);
        }
 
        String archive_code = entity.getArchive_code();
        if (archive_code != null) {
            stmt.bindString(6, archive_code);
        }
 
        String telephone = entity.getTelephone();
        if (telephone != null) {
            stmt.bindString(7, telephone);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(8, address);
        }
 
        String in_company = entity.getIn_company();
        if (in_company != null) {
            stmt.bindString(9, in_company);
        }
 
        String out_company = entity.getOut_company();
        if (out_company != null) {
            stmt.bindString(10, out_company);
        }
 
        String date = entity.getDate();
        if (date != null) {
            stmt.bindString(11, date);
        }
 
        String jiezhen_keshi = entity.getJiezhen_keshi();
        if (jiezhen_keshi != null) {
            stmt.bindString(12, jiezhen_keshi);
        }
 
        String in_doctor = entity.getIn_doctor();
        if (in_doctor != null) {
            stmt.bindString(13, in_doctor);
        }
 
        String out_doctor = entity.getOut_doctor();
        if (out_doctor != null) {
            stmt.bindString(14, out_doctor);
        }
 
        String doctor_telephone = entity.getDoctor_telephone();
        if (doctor_telephone != null) {
            stmt.bindString(15, doctor_telephone);
        }
 
        String first_image = entity.getFirst_image();
        if (first_image != null) {
            stmt.bindString(16, first_image);
        }
 
        String zhenduan_result = entity.getZhenduan_result();
        if (zhenduan_result != null) {
            stmt.bindString(17, zhenduan_result);
        }
 
        String jiancha_result = entity.getJiancha_result();
        if (jiancha_result != null) {
            stmt.bindString(18, jiancha_result);
        }
 
        String zhuyaobingshi = entity.getZhuyaobingshi();
        if (zhuyaobingshi != null) {
            stmt.bindString(19, zhuyaobingshi);
        }
 
        String jiwangbingshi = entity.getJiwangbingshi();
        if (jiwangbingshi != null) {
            stmt.bindString(20, jiwangbingshi);
        }
 
        String zhiliaoguocheng = entity.getZhiliaoguocheng();
        if (zhiliaoguocheng != null) {
            stmt.bindString(21, zhiliaoguocheng);
        }
 
        String advice = entity.getAdvice();
        if (advice != null) {
            stmt.bindString(22, advice);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LocalZhuanZhen readEntity(Cursor cursor, int offset) {
        LocalZhuanZhen entity = new LocalZhuanZhen( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // personId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // gender
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // age
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // archive_code
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // telephone
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // address
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // in_company
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // out_company
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // date
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // jiezhen_keshi
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // in_doctor
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // out_doctor
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // doctor_telephone
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // first_image
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // zhenduan_result
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // jiancha_result
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // zhuyaobingshi
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // jiwangbingshi
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // zhiliaoguocheng
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21) // advice
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LocalZhuanZhen entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setPersonId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGender(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAge(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setArchive_code(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setTelephone(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAddress(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setIn_company(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setOut_company(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setDate(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setJiezhen_keshi(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setIn_doctor(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setOut_doctor(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDoctor_telephone(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setFirst_image(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setZhenduan_result(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setJiancha_result(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setZhuyaobingshi(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setJiwangbingshi(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setZhiliaoguocheng(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setAdvice(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(LocalZhuanZhen entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(LocalZhuanZhen entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
