package com.c102c.app.model;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.c102c.app.model.PregnantFirstCheck_upload;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "PREGNANT_FIRST_CHECK_UPLOAD".
*/
public class PregnantFirstCheck_uploadDao extends AbstractDao<PregnantFirstCheck_upload, Long> {

    public static final String TABLENAME = "PREGNANT_FIRST_CHECK_UPLOAD";

    /**
     * Properties of entity PregnantFirstCheck_upload.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property PersonId = new Property(1, String.class, "personId", false, "PERSON_ID");
        public final static Property SpecialNo = new Property(2, String.class, "specialNo", false, "SPECIAL_NO");
        public final static Property MachineCode = new Property(3, String.class, "machineCode", false, "MACHINE_CODE");
        public final static Property MachineNo = new Property(4, String.class, "machineNo", false, "MACHINE_NO");
        public final static Property PregnantManualNo = new Property(5, String.class, "pregnantManualNo", false, "PREGNANT_MANUAL_NO");
        public final static Property Name = new Property(6, String.class, "name", false, "NAME");
        public final static Property AntenatalCareDate = new Property(7, String.class, "antenatalCareDate", false, "ANTENATAL_CARE_DATE");
        public final static Property GestationalWeeks = new Property(8, String.class, "gestationalWeeks", false, "GESTATIONAL_WEEKS");
        public final static Property Age = new Property(9, String.class, "age", false, "AGE");
        public final static Property HusbandName = new Property(10, String.class, "husbandName", false, "HUSBAND_NAME");
        public final static Property HusbandAge = new Property(11, String.class, "husbandAge", false, "HUSBAND_AGE");
        public final static Property HusbandPhone = new Property(12, String.class, "husbandPhone", false, "HUSBAND_PHONE");
        public final static Property GravidityTimes = new Property(13, String.class, "gravidityTimes", false, "GRAVIDITY_TIMES");
        public final static Property DeliveryTimes = new Property(14, String.class, "deliveryTimes", false, "DELIVERY_TIMES");
        public final static Property VaginalDeliveryTimes = new Property(15, String.class, "vaginalDeliveryTimes", false, "VAGINAL_DELIVERY_TIMES");
        public final static Property CaesareanSectionTimes = new Property(16, String.class, "caesareanSectionTimes", false, "CAESAREAN_SECTION_TIMES");
        public final static Property LMP = new Property(17, String.class, "LMP", false, "LMP");
        public final static Property ExpectedBirthDate = new Property(18, String.class, "expectedBirthDate", false, "EXPECTED_BIRTH_DATE");
        public final static Property PastHistoryCodes = new Property(19, String.class, "pastHistoryCodes", false, "PAST_HISTORY_CODES");
        public final static Property PastHistoryOther = new Property(20, String.class, "pastHistoryOther", false, "PAST_HISTORY_OTHER");
        public final static Property FamilyHistoryCodes = new Property(21, String.class, "familyHistoryCodes", false, "FAMILY_HISTORY_CODES");
        public final static Property FamilyHistoryOther = new Property(22, String.class, "familyHistoryOther", false, "FAMILY_HISTORY_OTHER");
        public final static Property PersonalHistoryCodes = new Property(23, String.class, "personalHistoryCodes", false, "PERSONAL_HISTORY_CODES");
        public final static Property PersonalHistoryOther = new Property(24, String.class, "personalHistoryOther", false, "PERSONAL_HISTORY_OTHER");
        public final static Property SurgeryHistoryCode = new Property(25, String.class, "surgeryHistoryCode", false, "SURGERY_HISTORY_CODE");
        public final static Property SurgeryHistoryOther = new Property(26, String.class, "surgeryHistoryOther", false, "SURGERY_HISTORY_OTHER");
        public final static Property AbortionTimes = new Property(27, String.class, "abortionTimes", false, "ABORTION_TIMES");
        public final static Property StillbirthTimes = new Property(28, String.class, "stillbirthTimes", false, "STILLBIRTH_TIMES");
        public final static Property DeadBirthTimes = new Property(29, String.class, "deadBirthTimes", false, "DEAD_BIRTH_TIMES");
        public final static Property NeonatalDeath = new Property(30, String.class, "neonatalDeath", false, "NEONATAL_DEATH");
        public final static Property BirthDefects = new Property(31, String.class, "birthDefects", false, "BIRTH_DEFECTS");
        public final static Property Height = new Property(32, String.class, "height", false, "HEIGHT");
        public final static Property Weight = new Property(33, String.class, "weight", false, "WEIGHT");
        public final static Property Bmi = new Property(34, String.class, "bmi", false, "BMI");
        public final static Property SBP = new Property(35, String.class, "SBP", false, "SBP");
        public final static Property DBP = new Property(36, String.class, "DBP", false, "DBP");
        public final static Property CardiacAuscultationCode = new Property(37, String.class, "cardiacAuscultationCode", false, "CARDIAC_AUSCULTATION_CODE");
        public final static Property CardiacAuscultationDesc = new Property(38, String.class, "cardiacAuscultationDesc", false, "CARDIAC_AUSCULTATION_DESC");
        public final static Property LungAuscultationCode = new Property(39, String.class, "lungAuscultationCode", false, "LUNG_AUSCULTATION_CODE");
        public final static Property LungAuscultationDesc = new Property(40, String.class, "lungAuscultationDesc", false, "LUNG_AUSCULTATION_DESC");
        public final static Property VulvaCode = new Property(41, String.class, "vulvaCode", false, "VULVA_CODE");
        public final static Property VulvaDesc = new Property(42, String.class, "vulvaDesc", false, "VULVA_DESC");
        public final static Property VaginaCode = new Property(43, String.class, "vaginaCode", false, "VAGINA_CODE");
        public final static Property VaginaDesc = new Property(44, String.class, "vaginaDesc", false, "VAGINA_DESC");
        public final static Property CervixCode = new Property(45, String.class, "cervixCode", false, "CERVIX_CODE");
        public final static Property CervixDesc = new Property(46, String.class, "cervixDesc", false, "CERVIX_DESC");
        public final static Property UterusCode = new Property(47, String.class, "uterusCode", false, "UTERUS_CODE");
        public final static Property UterusDesc = new Property(48, String.class, "uterusDesc", false, "UTERUS_DESC");
        public final static Property UterineAccessoriesCode = new Property(49, String.class, "uterineAccessoriesCode", false, "UTERINE_ACCESSORIES_CODE");
        public final static Property UterineAccessoriesDesc = new Property(50, String.class, "uterineAccessoriesDesc", false, "UTERINE_ACCESSORIES_DESC");
        public final static Property Hemoglobin = new Property(51, String.class, "hemoglobin", false, "HEMOGLOBIN");
        public final static Property Leucocyte = new Property(52, String.class, "leucocyte", false, "LEUCOCYTE");
        public final static Property Platelet = new Property(53, String.class, "platelet", false, "PLATELET");
        public final static Property BloodOther = new Property(54, String.class, "bloodOther", false, "BLOOD_OTHER");
        public final static Property UrineProteinCode = new Property(55, String.class, "urineProteinCode", false, "URINE_PROTEIN_CODE");
        public final static Property UrineSugarCode = new Property(56, String.class, "urineSugarCode", false, "URINE_SUGAR_CODE");
        public final static Property UrineKetoneCode = new Property(57, String.class, "urineKetoneCode", false, "URINE_KETONE_CODE");
        public final static Property UrineOccultBloodCode = new Property(58, String.class, "urineOccultBloodCode", false, "URINE_OCCULT_BLOOD_CODE");
        public final static Property UrineOther = new Property(59, String.class, "urineOther", false, "URINE_OTHER");
        public final static Property BloodGroupCode = new Property(60, String.class, "bloodGroupCode", false, "BLOOD_GROUP_CODE");
        public final static Property RhBloodGroupCode = new Property(61, String.class, "rhBloodGroupCode", false, "RH_BLOOD_GROUP_CODE");
        public final static Property BloodGlucose = new Property(62, String.class, "bloodGlucose", false, "BLOOD_GLUCOSE");
        public final static Property GPT = new Property(63, String.class, "GPT", false, "GPT");
        public final static Property GOT = new Property(64, String.class, "GOT", false, "GOT");
        public final static Property Albumin = new Property(65, String.class, "albumin", false, "ALBUMIN");
        public final static Property TBIL = new Property(66, String.class, "TBIL", false, "TBIL");
        public final static Property DBIL = new Property(67, String.class, "DBIL", false, "DBIL");
        public final static Property SerumCreatinine = new Property(68, String.class, "serumCreatinine", false, "SERUM_CREATININE");
        public final static Property BUN = new Property(69, String.class, "BUN", false, "BUN");
        public final static Property VaginalFluidCodes = new Property(70, String.class, "vaginalFluidCodes", false, "VAGINAL_FLUID_CODES");
        public final static Property VaginalFluidOther = new Property(71, String.class, "vaginalFluidOther", false, "VAGINAL_FLUID_OTHER");
        public final static Property VaginalCleanlinessCode = new Property(72, String.class, "vaginalCleanlinessCode", false, "VAGINAL_CLEANLINESS_CODE");
        public final static Property HBsAgCode = new Property(73, String.class, "HBsAgCode", false, "HBS_AG_CODE");
        public final static Property AntiHBsCode = new Property(74, String.class, "antiHBsCode", false, "ANTI_HBS_CODE");
        public final static Property HBeAgCode = new Property(75, String.class, "HBeAgCode", false, "HBE_AG_CODE");
        public final static Property HBeAbCode = new Property(76, String.class, "HBeAbCode", false, "HBE_AB_CODE");
        public final static Property HBcAbCode = new Property(77, String.class, "HBcAbCode", false, "HBC_AB_CODE");
        public final static Property SyphilisCode = new Property(78, String.class, "syphilisCode", false, "SYPHILIS_CODE");
        public final static Property HIVCode = new Property(79, String.class, "HIVCode", false, "HIVCODE");
        public final static Property BScan = new Property(80, String.class, "BScan", false, "BSCAN");
        public final static Property OverallAssessmentCode = new Property(81, String.class, "overallAssessmentCode", false, "OVERALL_ASSESSMENT_CODE");
        public final static Property OverallAssessmentDesc = new Property(82, String.class, "overallAssessmentDesc", false, "OVERALL_ASSESSMENT_DESC");
        public final static Property HealthGuideCodes = new Property(83, String.class, "healthGuideCodes", false, "HEALTH_GUIDE_CODES");
        public final static Property HealthGuideOther = new Property(84, String.class, "healthGuideOther", false, "HEALTH_GUIDE_OTHER");
        public final static Property ReferralCode = new Property(85, String.class, "referralCode", false, "REFERRAL_CODE");
        public final static Property ReferralReason = new Property(86, String.class, "referralReason", false, "REFERRAL_REASON");
        public final static Property ReferralOrg = new Property(87, String.class, "referralOrg", false, "REFERRAL_ORG");
        public final static Property ReferralDepartment = new Property(88, String.class, "referralDepartment", false, "REFERRAL_DEPARTMENT");
        public final static Property CheckDoctorCode = new Property(89, String.class, "checkDoctorCode", false, "CHECK_DOCTOR_CODE");
        public final static Property CheckDoctorName = new Property(90, String.class, "checkDoctorName", false, "CHECK_DOCTOR_NAME");
        public final static Property CheckOrgCode = new Property(91, String.class, "checkOrgCode", false, "CHECK_ORG_CODE");
        public final static Property CheckOrgName = new Property(92, String.class, "checkOrgName", false, "CHECK_ORG_NAME");
        public final static Property NextFlupDate = new Property(93, String.class, "nextFlupDate", false, "NEXT_FLUP_DATE");
    };


    public PregnantFirstCheck_uploadDao(DaoConfig config) {
        super(config);
    }
    
    public PregnantFirstCheck_uploadDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"PREGNANT_FIRST_CHECK_UPLOAD\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"PERSON_ID\" TEXT," + // 1: personId
                "\"SPECIAL_NO\" TEXT," + // 2: specialNo
                "\"MACHINE_CODE\" TEXT," + // 3: machineCode
                "\"MACHINE_NO\" TEXT," + // 4: machineNo
                "\"PREGNANT_MANUAL_NO\" TEXT," + // 5: pregnantManualNo
                "\"NAME\" TEXT," + // 6: name
                "\"ANTENATAL_CARE_DATE\" TEXT," + // 7: antenatalCareDate
                "\"GESTATIONAL_WEEKS\" TEXT," + // 8: gestationalWeeks
                "\"AGE\" TEXT," + // 9: age
                "\"HUSBAND_NAME\" TEXT," + // 10: husbandName
                "\"HUSBAND_AGE\" TEXT," + // 11: husbandAge
                "\"HUSBAND_PHONE\" TEXT," + // 12: husbandPhone
                "\"GRAVIDITY_TIMES\" TEXT," + // 13: gravidityTimes
                "\"DELIVERY_TIMES\" TEXT," + // 14: deliveryTimes
                "\"VAGINAL_DELIVERY_TIMES\" TEXT," + // 15: vaginalDeliveryTimes
                "\"CAESAREAN_SECTION_TIMES\" TEXT," + // 16: caesareanSectionTimes
                "\"LMP\" TEXT," + // 17: LMP
                "\"EXPECTED_BIRTH_DATE\" TEXT," + // 18: expectedBirthDate
                "\"PAST_HISTORY_CODES\" TEXT," + // 19: pastHistoryCodes
                "\"PAST_HISTORY_OTHER\" TEXT," + // 20: pastHistoryOther
                "\"FAMILY_HISTORY_CODES\" TEXT," + // 21: familyHistoryCodes
                "\"FAMILY_HISTORY_OTHER\" TEXT," + // 22: familyHistoryOther
                "\"PERSONAL_HISTORY_CODES\" TEXT," + // 23: personalHistoryCodes
                "\"PERSONAL_HISTORY_OTHER\" TEXT," + // 24: personalHistoryOther
                "\"SURGERY_HISTORY_CODE\" TEXT," + // 25: surgeryHistoryCode
                "\"SURGERY_HISTORY_OTHER\" TEXT," + // 26: surgeryHistoryOther
                "\"ABORTION_TIMES\" TEXT," + // 27: abortionTimes
                "\"STILLBIRTH_TIMES\" TEXT," + // 28: stillbirthTimes
                "\"DEAD_BIRTH_TIMES\" TEXT," + // 29: deadBirthTimes
                "\"NEONATAL_DEATH\" TEXT," + // 30: neonatalDeath
                "\"BIRTH_DEFECTS\" TEXT," + // 31: birthDefects
                "\"HEIGHT\" TEXT," + // 32: height
                "\"WEIGHT\" TEXT," + // 33: weight
                "\"BMI\" TEXT," + // 34: bmi
                "\"SBP\" TEXT," + // 35: SBP
                "\"DBP\" TEXT," + // 36: DBP
                "\"CARDIAC_AUSCULTATION_CODE\" TEXT," + // 37: cardiacAuscultationCode
                "\"CARDIAC_AUSCULTATION_DESC\" TEXT," + // 38: cardiacAuscultationDesc
                "\"LUNG_AUSCULTATION_CODE\" TEXT," + // 39: lungAuscultationCode
                "\"LUNG_AUSCULTATION_DESC\" TEXT," + // 40: lungAuscultationDesc
                "\"VULVA_CODE\" TEXT," + // 41: vulvaCode
                "\"VULVA_DESC\" TEXT," + // 42: vulvaDesc
                "\"VAGINA_CODE\" TEXT," + // 43: vaginaCode
                "\"VAGINA_DESC\" TEXT," + // 44: vaginaDesc
                "\"CERVIX_CODE\" TEXT," + // 45: cervixCode
                "\"CERVIX_DESC\" TEXT," + // 46: cervixDesc
                "\"UTERUS_CODE\" TEXT," + // 47: uterusCode
                "\"UTERUS_DESC\" TEXT," + // 48: uterusDesc
                "\"UTERINE_ACCESSORIES_CODE\" TEXT," + // 49: uterineAccessoriesCode
                "\"UTERINE_ACCESSORIES_DESC\" TEXT," + // 50: uterineAccessoriesDesc
                "\"HEMOGLOBIN\" TEXT," + // 51: hemoglobin
                "\"LEUCOCYTE\" TEXT," + // 52: leucocyte
                "\"PLATELET\" TEXT," + // 53: platelet
                "\"BLOOD_OTHER\" TEXT," + // 54: bloodOther
                "\"URINE_PROTEIN_CODE\" TEXT," + // 55: urineProteinCode
                "\"URINE_SUGAR_CODE\" TEXT," + // 56: urineSugarCode
                "\"URINE_KETONE_CODE\" TEXT," + // 57: urineKetoneCode
                "\"URINE_OCCULT_BLOOD_CODE\" TEXT," + // 58: urineOccultBloodCode
                "\"URINE_OTHER\" TEXT," + // 59: urineOther
                "\"BLOOD_GROUP_CODE\" TEXT," + // 60: bloodGroupCode
                "\"RH_BLOOD_GROUP_CODE\" TEXT," + // 61: rhBloodGroupCode
                "\"BLOOD_GLUCOSE\" TEXT," + // 62: bloodGlucose
                "\"GPT\" TEXT," + // 63: GPT
                "\"GOT\" TEXT," + // 64: GOT
                "\"ALBUMIN\" TEXT," + // 65: albumin
                "\"TBIL\" TEXT," + // 66: TBIL
                "\"DBIL\" TEXT," + // 67: DBIL
                "\"SERUM_CREATININE\" TEXT," + // 68: serumCreatinine
                "\"BUN\" TEXT," + // 69: BUN
                "\"VAGINAL_FLUID_CODES\" TEXT," + // 70: vaginalFluidCodes
                "\"VAGINAL_FLUID_OTHER\" TEXT," + // 71: vaginalFluidOther
                "\"VAGINAL_CLEANLINESS_CODE\" TEXT," + // 72: vaginalCleanlinessCode
                "\"HBS_AG_CODE\" TEXT," + // 73: HBsAgCode
                "\"ANTI_HBS_CODE\" TEXT," + // 74: antiHBsCode
                "\"HBE_AG_CODE\" TEXT," + // 75: HBeAgCode
                "\"HBE_AB_CODE\" TEXT," + // 76: HBeAbCode
                "\"HBC_AB_CODE\" TEXT," + // 77: HBcAbCode
                "\"SYPHILIS_CODE\" TEXT," + // 78: syphilisCode
                "\"HIVCODE\" TEXT," + // 79: HIVCode
                "\"BSCAN\" TEXT," + // 80: BScan
                "\"OVERALL_ASSESSMENT_CODE\" TEXT," + // 81: overallAssessmentCode
                "\"OVERALL_ASSESSMENT_DESC\" TEXT," + // 82: overallAssessmentDesc
                "\"HEALTH_GUIDE_CODES\" TEXT," + // 83: healthGuideCodes
                "\"HEALTH_GUIDE_OTHER\" TEXT," + // 84: healthGuideOther
                "\"REFERRAL_CODE\" TEXT," + // 85: referralCode
                "\"REFERRAL_REASON\" TEXT," + // 86: referralReason
                "\"REFERRAL_ORG\" TEXT," + // 87: referralOrg
                "\"REFERRAL_DEPARTMENT\" TEXT," + // 88: referralDepartment
                "\"CHECK_DOCTOR_CODE\" TEXT," + // 89: checkDoctorCode
                "\"CHECK_DOCTOR_NAME\" TEXT," + // 90: checkDoctorName
                "\"CHECK_ORG_CODE\" TEXT," + // 91: checkOrgCode
                "\"CHECK_ORG_NAME\" TEXT," + // 92: checkOrgName
                "\"NEXT_FLUP_DATE\" TEXT);"); // 93: nextFlupDate
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PREGNANT_FIRST_CHECK_UPLOAD\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, PregnantFirstCheck_upload entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String personId = entity.getPersonId();
        if (personId != null) {
            stmt.bindString(2, personId);
        }
 
        String specialNo = entity.getSpecialNo();
        if (specialNo != null) {
            stmt.bindString(3, specialNo);
        }
 
        String machineCode = entity.getMachineCode();
        if (machineCode != null) {
            stmt.bindString(4, machineCode);
        }
 
        String machineNo = entity.getMachineNo();
        if (machineNo != null) {
            stmt.bindString(5, machineNo);
        }
 
        String pregnantManualNo = entity.getPregnantManualNo();
        if (pregnantManualNo != null) {
            stmt.bindString(6, pregnantManualNo);
        }
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(7, name);
        }
 
        String antenatalCareDate = entity.getAntenatalCareDate();
        if (antenatalCareDate != null) {
            stmt.bindString(8, antenatalCareDate);
        }
 
        String gestationalWeeks = entity.getGestationalWeeks();
        if (gestationalWeeks != null) {
            stmt.bindString(9, gestationalWeeks);
        }
 
        String age = entity.getAge();
        if (age != null) {
            stmt.bindString(10, age);
        }
 
        String husbandName = entity.getHusbandName();
        if (husbandName != null) {
            stmt.bindString(11, husbandName);
        }
 
        String husbandAge = entity.getHusbandAge();
        if (husbandAge != null) {
            stmt.bindString(12, husbandAge);
        }
 
        String husbandPhone = entity.getHusbandPhone();
        if (husbandPhone != null) {
            stmt.bindString(13, husbandPhone);
        }
 
        String gravidityTimes = entity.getGravidityTimes();
        if (gravidityTimes != null) {
            stmt.bindString(14, gravidityTimes);
        }
 
        String deliveryTimes = entity.getDeliveryTimes();
        if (deliveryTimes != null) {
            stmt.bindString(15, deliveryTimes);
        }
 
        String vaginalDeliveryTimes = entity.getVaginalDeliveryTimes();
        if (vaginalDeliveryTimes != null) {
            stmt.bindString(16, vaginalDeliveryTimes);
        }
 
        String caesareanSectionTimes = entity.getCaesareanSectionTimes();
        if (caesareanSectionTimes != null) {
            stmt.bindString(17, caesareanSectionTimes);
        }
 
        String LMP = entity.getLMP();
        if (LMP != null) {
            stmt.bindString(18, LMP);
        }
 
        String expectedBirthDate = entity.getExpectedBirthDate();
        if (expectedBirthDate != null) {
            stmt.bindString(19, expectedBirthDate);
        }
 
        String pastHistoryCodes = entity.getPastHistoryCodes();
        if (pastHistoryCodes != null) {
            stmt.bindString(20, pastHistoryCodes);
        }
 
        String pastHistoryOther = entity.getPastHistoryOther();
        if (pastHistoryOther != null) {
            stmt.bindString(21, pastHistoryOther);
        }
 
        String familyHistoryCodes = entity.getFamilyHistoryCodes();
        if (familyHistoryCodes != null) {
            stmt.bindString(22, familyHistoryCodes);
        }
 
        String familyHistoryOther = entity.getFamilyHistoryOther();
        if (familyHistoryOther != null) {
            stmt.bindString(23, familyHistoryOther);
        }
 
        String personalHistoryCodes = entity.getPersonalHistoryCodes();
        if (personalHistoryCodes != null) {
            stmt.bindString(24, personalHistoryCodes);
        }
 
        String personalHistoryOther = entity.getPersonalHistoryOther();
        if (personalHistoryOther != null) {
            stmt.bindString(25, personalHistoryOther);
        }
 
        String surgeryHistoryCode = entity.getSurgeryHistoryCode();
        if (surgeryHistoryCode != null) {
            stmt.bindString(26, surgeryHistoryCode);
        }
 
        String surgeryHistoryOther = entity.getSurgeryHistoryOther();
        if (surgeryHistoryOther != null) {
            stmt.bindString(27, surgeryHistoryOther);
        }
 
        String abortionTimes = entity.getAbortionTimes();
        if (abortionTimes != null) {
            stmt.bindString(28, abortionTimes);
        }
 
        String stillbirthTimes = entity.getStillbirthTimes();
        if (stillbirthTimes != null) {
            stmt.bindString(29, stillbirthTimes);
        }
 
        String deadBirthTimes = entity.getDeadBirthTimes();
        if (deadBirthTimes != null) {
            stmt.bindString(30, deadBirthTimes);
        }
 
        String neonatalDeath = entity.getNeonatalDeath();
        if (neonatalDeath != null) {
            stmt.bindString(31, neonatalDeath);
        }
 
        String birthDefects = entity.getBirthDefects();
        if (birthDefects != null) {
            stmt.bindString(32, birthDefects);
        }
 
        String height = entity.getHeight();
        if (height != null) {
            stmt.bindString(33, height);
        }
 
        String weight = entity.getWeight();
        if (weight != null) {
            stmt.bindString(34, weight);
        }
 
        String bmi = entity.getBmi();
        if (bmi != null) {
            stmt.bindString(35, bmi);
        }
 
        String SBP = entity.getSBP();
        if (SBP != null) {
            stmt.bindString(36, SBP);
        }
 
        String DBP = entity.getDBP();
        if (DBP != null) {
            stmt.bindString(37, DBP);
        }
 
        String cardiacAuscultationCode = entity.getCardiacAuscultationCode();
        if (cardiacAuscultationCode != null) {
            stmt.bindString(38, cardiacAuscultationCode);
        }
 
        String cardiacAuscultationDesc = entity.getCardiacAuscultationDesc();
        if (cardiacAuscultationDesc != null) {
            stmt.bindString(39, cardiacAuscultationDesc);
        }
 
        String lungAuscultationCode = entity.getLungAuscultationCode();
        if (lungAuscultationCode != null) {
            stmt.bindString(40, lungAuscultationCode);
        }
 
        String lungAuscultationDesc = entity.getLungAuscultationDesc();
        if (lungAuscultationDesc != null) {
            stmt.bindString(41, lungAuscultationDesc);
        }
 
        String vulvaCode = entity.getVulvaCode();
        if (vulvaCode != null) {
            stmt.bindString(42, vulvaCode);
        }
 
        String vulvaDesc = entity.getVulvaDesc();
        if (vulvaDesc != null) {
            stmt.bindString(43, vulvaDesc);
        }
 
        String vaginaCode = entity.getVaginaCode();
        if (vaginaCode != null) {
            stmt.bindString(44, vaginaCode);
        }
 
        String vaginaDesc = entity.getVaginaDesc();
        if (vaginaDesc != null) {
            stmt.bindString(45, vaginaDesc);
        }
 
        String cervixCode = entity.getCervixCode();
        if (cervixCode != null) {
            stmt.bindString(46, cervixCode);
        }
 
        String cervixDesc = entity.getCervixDesc();
        if (cervixDesc != null) {
            stmt.bindString(47, cervixDesc);
        }
 
        String uterusCode = entity.getUterusCode();
        if (uterusCode != null) {
            stmt.bindString(48, uterusCode);
        }
 
        String uterusDesc = entity.getUterusDesc();
        if (uterusDesc != null) {
            stmt.bindString(49, uterusDesc);
        }
 
        String uterineAccessoriesCode = entity.getUterineAccessoriesCode();
        if (uterineAccessoriesCode != null) {
            stmt.bindString(50, uterineAccessoriesCode);
        }
 
        String uterineAccessoriesDesc = entity.getUterineAccessoriesDesc();
        if (uterineAccessoriesDesc != null) {
            stmt.bindString(51, uterineAccessoriesDesc);
        }
 
        String hemoglobin = entity.getHemoglobin();
        if (hemoglobin != null) {
            stmt.bindString(52, hemoglobin);
        }
 
        String leucocyte = entity.getLeucocyte();
        if (leucocyte != null) {
            stmt.bindString(53, leucocyte);
        }
 
        String platelet = entity.getPlatelet();
        if (platelet != null) {
            stmt.bindString(54, platelet);
        }
 
        String bloodOther = entity.getBloodOther();
        if (bloodOther != null) {
            stmt.bindString(55, bloodOther);
        }
 
        String urineProteinCode = entity.getUrineProteinCode();
        if (urineProteinCode != null) {
            stmt.bindString(56, urineProteinCode);
        }
 
        String urineSugarCode = entity.getUrineSugarCode();
        if (urineSugarCode != null) {
            stmt.bindString(57, urineSugarCode);
        }
 
        String urineKetoneCode = entity.getUrineKetoneCode();
        if (urineKetoneCode != null) {
            stmt.bindString(58, urineKetoneCode);
        }
 
        String urineOccultBloodCode = entity.getUrineOccultBloodCode();
        if (urineOccultBloodCode != null) {
            stmt.bindString(59, urineOccultBloodCode);
        }
 
        String urineOther = entity.getUrineOther();
        if (urineOther != null) {
            stmt.bindString(60, urineOther);
        }
 
        String bloodGroupCode = entity.getBloodGroupCode();
        if (bloodGroupCode != null) {
            stmt.bindString(61, bloodGroupCode);
        }
 
        String rhBloodGroupCode = entity.getRhBloodGroupCode();
        if (rhBloodGroupCode != null) {
            stmt.bindString(62, rhBloodGroupCode);
        }
 
        String bloodGlucose = entity.getBloodGlucose();
        if (bloodGlucose != null) {
            stmt.bindString(63, bloodGlucose);
        }
 
        String GPT = entity.getGPT();
        if (GPT != null) {
            stmt.bindString(64, GPT);
        }
 
        String GOT = entity.getGOT();
        if (GOT != null) {
            stmt.bindString(65, GOT);
        }
 
        String albumin = entity.getAlbumin();
        if (albumin != null) {
            stmt.bindString(66, albumin);
        }
 
        String TBIL = entity.getTBIL();
        if (TBIL != null) {
            stmt.bindString(67, TBIL);
        }
 
        String DBIL = entity.getDBIL();
        if (DBIL != null) {
            stmt.bindString(68, DBIL);
        }
 
        String serumCreatinine = entity.getSerumCreatinine();
        if (serumCreatinine != null) {
            stmt.bindString(69, serumCreatinine);
        }
 
        String BUN = entity.getBUN();
        if (BUN != null) {
            stmt.bindString(70, BUN);
        }
 
        String vaginalFluidCodes = entity.getVaginalFluidCodes();
        if (vaginalFluidCodes != null) {
            stmt.bindString(71, vaginalFluidCodes);
        }
 
        String vaginalFluidOther = entity.getVaginalFluidOther();
        if (vaginalFluidOther != null) {
            stmt.bindString(72, vaginalFluidOther);
        }
 
        String vaginalCleanlinessCode = entity.getVaginalCleanlinessCode();
        if (vaginalCleanlinessCode != null) {
            stmt.bindString(73, vaginalCleanlinessCode);
        }
 
        String HBsAgCode = entity.getHBsAgCode();
        if (HBsAgCode != null) {
            stmt.bindString(74, HBsAgCode);
        }
 
        String antiHBsCode = entity.getAntiHBsCode();
        if (antiHBsCode != null) {
            stmt.bindString(75, antiHBsCode);
        }
 
        String HBeAgCode = entity.getHBeAgCode();
        if (HBeAgCode != null) {
            stmt.bindString(76, HBeAgCode);
        }
 
        String HBeAbCode = entity.getHBeAbCode();
        if (HBeAbCode != null) {
            stmt.bindString(77, HBeAbCode);
        }
 
        String HBcAbCode = entity.getHBcAbCode();
        if (HBcAbCode != null) {
            stmt.bindString(78, HBcAbCode);
        }
 
        String syphilisCode = entity.getSyphilisCode();
        if (syphilisCode != null) {
            stmt.bindString(79, syphilisCode);
        }
 
        String HIVCode = entity.getHIVCode();
        if (HIVCode != null) {
            stmt.bindString(80, HIVCode);
        }
 
        String BScan = entity.getBScan();
        if (BScan != null) {
            stmt.bindString(81, BScan);
        }
 
        String overallAssessmentCode = entity.getOverallAssessmentCode();
        if (overallAssessmentCode != null) {
            stmt.bindString(82, overallAssessmentCode);
        }
 
        String overallAssessmentDesc = entity.getOverallAssessmentDesc();
        if (overallAssessmentDesc != null) {
            stmt.bindString(83, overallAssessmentDesc);
        }
 
        String healthGuideCodes = entity.getHealthGuideCodes();
        if (healthGuideCodes != null) {
            stmt.bindString(84, healthGuideCodes);
        }
 
        String healthGuideOther = entity.getHealthGuideOther();
        if (healthGuideOther != null) {
            stmt.bindString(85, healthGuideOther);
        }
 
        String referralCode = entity.getReferralCode();
        if (referralCode != null) {
            stmt.bindString(86, referralCode);
        }
 
        String referralReason = entity.getReferralReason();
        if (referralReason != null) {
            stmt.bindString(87, referralReason);
        }
 
        String referralOrg = entity.getReferralOrg();
        if (referralOrg != null) {
            stmt.bindString(88, referralOrg);
        }
 
        String referralDepartment = entity.getReferralDepartment();
        if (referralDepartment != null) {
            stmt.bindString(89, referralDepartment);
        }
 
        String checkDoctorCode = entity.getCheckDoctorCode();
        if (checkDoctorCode != null) {
            stmt.bindString(90, checkDoctorCode);
        }
 
        String checkDoctorName = entity.getCheckDoctorName();
        if (checkDoctorName != null) {
            stmt.bindString(91, checkDoctorName);
        }
 
        String checkOrgCode = entity.getCheckOrgCode();
        if (checkOrgCode != null) {
            stmt.bindString(92, checkOrgCode);
        }
 
        String checkOrgName = entity.getCheckOrgName();
        if (checkOrgName != null) {
            stmt.bindString(93, checkOrgName);
        }
 
        String nextFlupDate = entity.getNextFlupDate();
        if (nextFlupDate != null) {
            stmt.bindString(94, nextFlupDate);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public PregnantFirstCheck_upload readEntity(Cursor cursor, int offset) {
        PregnantFirstCheck_upload entity = new PregnantFirstCheck_upload( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // personId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // specialNo
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // machineCode
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // machineNo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // pregnantManualNo
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // name
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // antenatalCareDate
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // gestationalWeeks
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // age
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // husbandName
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // husbandAge
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // husbandPhone
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // gravidityTimes
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // deliveryTimes
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // vaginalDeliveryTimes
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // caesareanSectionTimes
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // LMP
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // expectedBirthDate
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // pastHistoryCodes
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // pastHistoryOther
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // familyHistoryCodes
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // familyHistoryOther
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // personalHistoryCodes
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // personalHistoryOther
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // surgeryHistoryCode
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // surgeryHistoryOther
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // abortionTimes
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // stillbirthTimes
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // deadBirthTimes
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // neonatalDeath
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // birthDefects
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // height
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // weight
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // bmi
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // SBP
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // DBP
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // cardiacAuscultationCode
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // cardiacAuscultationDesc
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // lungAuscultationCode
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // lungAuscultationDesc
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // vulvaCode
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // vulvaDesc
            cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // vaginaCode
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // vaginaDesc
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // cervixCode
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // cervixDesc
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // uterusCode
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // uterusDesc
            cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49), // uterineAccessoriesCode
            cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50), // uterineAccessoriesDesc
            cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51), // hemoglobin
            cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52), // leucocyte
            cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53), // platelet
            cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54), // bloodOther
            cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55), // urineProteinCode
            cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56), // urineSugarCode
            cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57), // urineKetoneCode
            cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58), // urineOccultBloodCode
            cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59), // urineOther
            cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60), // bloodGroupCode
            cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61), // rhBloodGroupCode
            cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62), // bloodGlucose
            cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63), // GPT
            cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64), // GOT
            cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65), // albumin
            cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66), // TBIL
            cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67), // DBIL
            cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68), // serumCreatinine
            cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69), // BUN
            cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70), // vaginalFluidCodes
            cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71), // vaginalFluidOther
            cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72), // vaginalCleanlinessCode
            cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73), // HBsAgCode
            cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74), // antiHBsCode
            cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75), // HBeAgCode
            cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76), // HBeAbCode
            cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77), // HBcAbCode
            cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78), // syphilisCode
            cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79), // HIVCode
            cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80), // BScan
            cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81), // overallAssessmentCode
            cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82), // overallAssessmentDesc
            cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83), // healthGuideCodes
            cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84), // healthGuideOther
            cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85), // referralCode
            cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86), // referralReason
            cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87), // referralOrg
            cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88), // referralDepartment
            cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89), // checkDoctorCode
            cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90), // checkDoctorName
            cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91), // checkOrgCode
            cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92), // checkOrgName
            cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93) // nextFlupDate
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, PregnantFirstCheck_upload entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setPersonId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSpecialNo(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMachineCode(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setMachineNo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setPregnantManualNo(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setName(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setAntenatalCareDate(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setGestationalWeeks(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setAge(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setHusbandName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setHusbandAge(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setHusbandPhone(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setGravidityTimes(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDeliveryTimes(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setVaginalDeliveryTimes(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setCaesareanSectionTimes(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setLMP(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setExpectedBirthDate(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setPastHistoryCodes(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPastHistoryOther(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setFamilyHistoryCodes(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setFamilyHistoryOther(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setPersonalHistoryCodes(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setPersonalHistoryOther(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setSurgeryHistoryCode(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setSurgeryHistoryOther(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setAbortionTimes(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setStillbirthTimes(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setDeadBirthTimes(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setNeonatalDeath(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setBirthDefects(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setHeight(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setWeight(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setBmi(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setSBP(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setDBP(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCardiacAuscultationCode(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setCardiacAuscultationDesc(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setLungAuscultationCode(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setLungAuscultationDesc(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setVulvaCode(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setVulvaDesc(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setVaginaCode(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setVaginaDesc(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setCervixCode(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setCervixDesc(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setUterusCode(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setUterusDesc(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setUterineAccessoriesCode(cursor.isNull(offset + 49) ? null : cursor.getString(offset + 49));
        entity.setUterineAccessoriesDesc(cursor.isNull(offset + 50) ? null : cursor.getString(offset + 50));
        entity.setHemoglobin(cursor.isNull(offset + 51) ? null : cursor.getString(offset + 51));
        entity.setLeucocyte(cursor.isNull(offset + 52) ? null : cursor.getString(offset + 52));
        entity.setPlatelet(cursor.isNull(offset + 53) ? null : cursor.getString(offset + 53));
        entity.setBloodOther(cursor.isNull(offset + 54) ? null : cursor.getString(offset + 54));
        entity.setUrineProteinCode(cursor.isNull(offset + 55) ? null : cursor.getString(offset + 55));
        entity.setUrineSugarCode(cursor.isNull(offset + 56) ? null : cursor.getString(offset + 56));
        entity.setUrineKetoneCode(cursor.isNull(offset + 57) ? null : cursor.getString(offset + 57));
        entity.setUrineOccultBloodCode(cursor.isNull(offset + 58) ? null : cursor.getString(offset + 58));
        entity.setUrineOther(cursor.isNull(offset + 59) ? null : cursor.getString(offset + 59));
        entity.setBloodGroupCode(cursor.isNull(offset + 60) ? null : cursor.getString(offset + 60));
        entity.setRhBloodGroupCode(cursor.isNull(offset + 61) ? null : cursor.getString(offset + 61));
        entity.setBloodGlucose(cursor.isNull(offset + 62) ? null : cursor.getString(offset + 62));
        entity.setGPT(cursor.isNull(offset + 63) ? null : cursor.getString(offset + 63));
        entity.setGOT(cursor.isNull(offset + 64) ? null : cursor.getString(offset + 64));
        entity.setAlbumin(cursor.isNull(offset + 65) ? null : cursor.getString(offset + 65));
        entity.setTBIL(cursor.isNull(offset + 66) ? null : cursor.getString(offset + 66));
        entity.setDBIL(cursor.isNull(offset + 67) ? null : cursor.getString(offset + 67));
        entity.setSerumCreatinine(cursor.isNull(offset + 68) ? null : cursor.getString(offset + 68));
        entity.setBUN(cursor.isNull(offset + 69) ? null : cursor.getString(offset + 69));
        entity.setVaginalFluidCodes(cursor.isNull(offset + 70) ? null : cursor.getString(offset + 70));
        entity.setVaginalFluidOther(cursor.isNull(offset + 71) ? null : cursor.getString(offset + 71));
        entity.setVaginalCleanlinessCode(cursor.isNull(offset + 72) ? null : cursor.getString(offset + 72));
        entity.setHBsAgCode(cursor.isNull(offset + 73) ? null : cursor.getString(offset + 73));
        entity.setAntiHBsCode(cursor.isNull(offset + 74) ? null : cursor.getString(offset + 74));
        entity.setHBeAgCode(cursor.isNull(offset + 75) ? null : cursor.getString(offset + 75));
        entity.setHBeAbCode(cursor.isNull(offset + 76) ? null : cursor.getString(offset + 76));
        entity.setHBcAbCode(cursor.isNull(offset + 77) ? null : cursor.getString(offset + 77));
        entity.setSyphilisCode(cursor.isNull(offset + 78) ? null : cursor.getString(offset + 78));
        entity.setHIVCode(cursor.isNull(offset + 79) ? null : cursor.getString(offset + 79));
        entity.setBScan(cursor.isNull(offset + 80) ? null : cursor.getString(offset + 80));
        entity.setOverallAssessmentCode(cursor.isNull(offset + 81) ? null : cursor.getString(offset + 81));
        entity.setOverallAssessmentDesc(cursor.isNull(offset + 82) ? null : cursor.getString(offset + 82));
        entity.setHealthGuideCodes(cursor.isNull(offset + 83) ? null : cursor.getString(offset + 83));
        entity.setHealthGuideOther(cursor.isNull(offset + 84) ? null : cursor.getString(offset + 84));
        entity.setReferralCode(cursor.isNull(offset + 85) ? null : cursor.getString(offset + 85));
        entity.setReferralReason(cursor.isNull(offset + 86) ? null : cursor.getString(offset + 86));
        entity.setReferralOrg(cursor.isNull(offset + 87) ? null : cursor.getString(offset + 87));
        entity.setReferralDepartment(cursor.isNull(offset + 88) ? null : cursor.getString(offset + 88));
        entity.setCheckDoctorCode(cursor.isNull(offset + 89) ? null : cursor.getString(offset + 89));
        entity.setCheckDoctorName(cursor.isNull(offset + 90) ? null : cursor.getString(offset + 90));
        entity.setCheckOrgCode(cursor.isNull(offset + 91) ? null : cursor.getString(offset + 91));
        entity.setCheckOrgName(cursor.isNull(offset + 92) ? null : cursor.getString(offset + 92));
        entity.setNextFlupDate(cursor.isNull(offset + 93) ? null : cursor.getString(offset + 93));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(PregnantFirstCheck_upload entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(PregnantFirstCheck_upload entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
